---
    Device_name: ENV_BrandBox
    get_relay_state: "GET:"

    # All set parameters
    #set_terminal: SET:TERM
    set_discharge: SET:DISCHARGE {} # ON/OFF
    set_external_light: SET:BOX_LIGHT {} # ON/OFF
    set_environement_control: SET:CTRL {} # ON/OFF
    set_open_channel: :open {}
    set_open_channel_all: :open A1,A2,B1,B2,C1,C2 {}
    set_mode: SET:MOD {}
    set_relay: "SET: {}"
    set_close_channel: :clos {}
    set_hum: SET:SETPOINT {}
    set_control:  SET:CTRL_MODE {}
    set_lock_switches: SET:TST {}
    set_clear_log: SET:CLEAR_LOG {}
    set_box_light: SET:BOX_LIGHT {}
    set_microscope_light:  SET:MICROSCOPE_LIGHT {}

    # All get parameters
    get_environment: GET:ENV ? # Airtemp, airhum, chucktemp
    get_box_environment: GET:DATA_BOX ? # airhum, Airtemp, dew_point
    get_lux: GET:LUX ?
    #get_door: GET:DOOR ?
    get_vacuum: GET:VALVE_ON ?
    get_vavuum_controller: GET:CTRL ?
    get_status: "*STB?"
    get_open_channels: :open:STAT?
    get_lock_switch: GET:TST
    get_closed_channels: :clos:STAT?
    get_check_channel: :clos?
    get_operation_complete:
      command: "*OPC?"
      success: "1"

    reset:
        - clear_log: "YES"
        #- terminal: "OFF"
        - external_light: "OFF"
        #- open_channel: "A1,A2,B1,B2,C1,C2"
        - control: "HUM"
        #- box_light: "OFF"
        #- microscope_light: "OFF"

    # Misc
    #reset_device: ["*rst"]
    separator: ","
    bias_relay: A
    LCR_relay: B
    Device_type:
            - Light controller
            - Environment controller
    requires_read_on_set: True # If an acc is comming from the device after a set parameter
