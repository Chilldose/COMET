--- # Block of dict entries

    # Critical parameters
    Settings_name: settings # The name of the settings which will be shown in the framework and will be the addressing name (settings here is important)

    TelegramBot:
        Dominic: 260848510
    Current_operator: Dominic
    TelegramResponderPlugins:
        - RaspberryPiPlugins

    433MHz_Transiever:
        path: "/home/pi/git_repos/433Utils/RPi_utils/send"
        Codes:
          SuperChill:
            - 001100 3
          Chill:
            - 001100 2
            - 001100 3
          Bedroom:
            - 001100 1
          Study:
            - 101100 1
          All:
            - 001100 1
            - 001100 2
            - 001100 3
            - 001100 5

    measurement_types: # Different measurement types which can be conducted
        - Temp_Living
        - Hum_Living
        - Temp_Bedroom
        - Hum_Bedroom
        - Temp_Outside
        - Hum_Outside

    Rooms:
        - Living
        - Bedroom
        - Outside

    Sensors:
        Living:
                pin: 26
                type: DHT22
        Bedroom:
                pin: 6
                type: DHT22
        Outside:
                pin: 13
                type: DHT22

    Ranges:
        Living:
                temp_min: 20
                temp_max: 30
                hum_min: 20
                hum_max: 50
        Bedroom:
                temp_min: 20
                temp_max: 30
                hum_min: 20
                hum_max: 60
        Outside:
                temp_min: -5
                temp_max: 30
                hum_min: 20
                hum_max: 100

    # Optional parameters
    temp_history: 108000 # How much should be shown in the humidity history in seconds
    temphum_update_interval: 300000 # Update intervall of the humidity controll in ms
    temphum_plugin: OneWireEnv
    time_format: "%H:%M:%S" # Time format of the humidity control
    GUI_update_interval: 10000.0 # How often should the GUI be updated in ms
    show_toolbar: False

    GUI_render_order: # Give a render order if need be, otherwise all found gui elements will be rendered
        - EnvironmentMonitor

    Socket_connection: # Config for the socket connection, for data transfer between processes
        Host:
          IP: 127.0.0.2
          Port: 65432

        Client:
          IP: 127.0.0.4
          Port: 65432