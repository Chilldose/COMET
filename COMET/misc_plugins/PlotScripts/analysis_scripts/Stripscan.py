"""This script plots IVCV files together for files generated by QTC
Data must be """

import logging
import holoviews as hv
from holoviews import opts

hv.extension('bokeh')

from forge.tools import convert_to_df
from forge.tools import plot_all_measurements, convert_to_EngUnits
from forge.specialPlots import *


class Stripscan:

    def __init__(self, data, configs):

        self.log = logging.getLogger(__name__)
        self.data = convert_to_df(data, abs=False)
        self.config = configs
        self.finalPlot = None
        self.df = []
        self.measurements = self.data["columns"]
        padidx = self.measurements.index("Pad")
        del self.measurements[padidx]
        self.PlotDict = {"Name": "Stripscan"}

        #hv.renderer('bokeh').theme = "dark_minimal"

        # Convert the units to the desired ones
        for meas in self.measurements:
            unit = self.config["Stripscan"].get(meas, {}).get("UnitConversion", None)
            if unit:
                self.data = convert_to_EngUnits(self.data, meas, unit)


    def run(self):
        """Runs the script"""

        # Plot all Measurements
        self.basePlots = plot_all_measurements(self.data, self.config, "Pad", "Stripscan", do_not_plot=("Pad"))
        #self.finalPlot.Overlay.Humidity = addHistogram(self.finalPlot.Overlay.Humidity, dimensions="Humidity")
        self.PlotDict["BasePlots"] = self.basePlots
        self.PlotDict["All"] = self.basePlots


        # Plot all special Plots:
        # Histogram Plot
        self.Histogram = dospecialPlots(self.data, self.config, "Stripscan", "concatHistogram", self.measurements, iqr=0.7)
        if self.Histogram:
            self.PlotDict["Histogram"] = self.Histogram
            self.PlotDict["All"] = self.PlotDict["All"] + self.Histogram

        # Whiskers Plot
        self.WhiskerPlots = dospecialPlots(self.data, self.config, "Stripscan", "BoxWhisker", self.measurements)
        if self.WhiskerPlots:
            self.PlotDict["Whiskers"] = self.WhiskerPlots
            self.PlotDict["All"] = self.PlotDict["All"] + self.WhiskerPlots


        # Violin Plot
        self.Violin = dospecialPlots(self.data, self.config, "Stripscan", "Violin", self.measurements)
        if self.Violin:
            self.PlotDict["Violin"] = self.Violin
            self.PlotDict["All"] = self.PlotDict["All"] + self.Violin

        # Reconfig the plots to be sure
        self.PlotDict["All"] = config_layout(self.PlotDict["All"], **self.config["Stripscan"].get("Layout", {}))
        return self.PlotDict

